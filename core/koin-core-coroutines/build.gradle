apply plugin: 'org.jetbrains.kotlin.multiplatform'

archivesBaseName = 'koin-core-coroutines'

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    jvm {
        withJava()
    }
    js(BOTH) {
        nodejs()
        browser()
    }

    macosX64()
    macosArm64()
    iosX64()
    iosArm64()
    iosArm32()
    iosSimulatorArm64()
    watchosArm32()
    watchosArm64()
    watchosSimulatorArm64()
    watchosX86()
    watchosX64()
    tvosArm64()
    tvosSimulatorArm64()
    tvosX64()

//    mingwX64()
//    mingwX86()
//    linuxX64()
//    linuxArm32Hfp()
//    linuxMips32()

    sourceSets {
        commonMain {
            dependencies {
                api kotlin("stdlib-common")
                api project(":koin-core")

                api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
            }
        }

        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")

                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
            }
        }

        jvmMain {
            dependencies {
                api kotlin("stdlib-jdk8")
            }
        }

        jvmTest {
            dependencies {
                implementation kotlin("test-junit")
                implementation "junit:junit:$junit_version"
                implementation "org.mockito:mockito-inline:$mockito_version"
            }
        }

        jsMain {
            dependsOn commonMain
            dependencies {

            }
        }

        jsTest {
            dependsOn commonTest
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }

        nativeMain {
            dependsOn commonMain
            dependencies {

            }
        }

        nativeTest {
            dependsOn commonTest
        }

        darwinMain {
            dependsOn nativeMain
        }

        darwinTest {
            dependsOn nativeTest
        }

        otherMain {
            dependsOn nativeMain
        }

        configure([
                targets.macosX64,
                targets.macosArm64,
                targets.watchosArm32,
                targets.watchosArm64,
                targets.watchosX86,
                targets.watchosX64,
                targets.watchosSimulatorArm64,
                targets.tvosArm64,
                targets.tvosX64,
                targets.tvosSimulatorArm64,
                targets.iosX64,
                targets.iosSimulatorArm64,
                targets.iosArm32,
                targets.iosArm64
        ]) {
            compilations.main.source(sourceSets.darwinMain)
            compilations.test.source(sourceSets.nativeTest)
        }
//        configure([
//                targets.linuxX64,
//                targets.linuxArm32Hfp,
//                targets.linuxMips32,
//                targets.mingwX64,
//                targets.mingwX86
//        ]) {
//            compilations.main.source(sourceSets.otherMain)
//            compilations.test.source(sourceSets.nativeTest)
//        }
    }
}


apply from: '../../gradle/publish-to-central.gradle'
